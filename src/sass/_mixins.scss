@function spacing($key) {
  @return map-get($spacings, $key);
}

@function strip-unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }

  @return $number;
}

@mixin fluid-type($properties, $min-vw, $max-vw, $min-value, $max-value) {
  @each $property in $properties {
    #{$property}: $min-value;
  }

  @media (min-width: $min-vw) {
    @each $property in $properties {
      #{$property}: calc(#{$min-value} + #{strip-unit($max-value - $min-value)} * (100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)});
    }
  }

  @media (min-width: $max-vw) {
    @each $property in $properties {
      #{$property}: $max-value;
    }
  }
}

@mixin bp($point) {
  $bp-mobile-only: '(max-width: #{map_get($breakpoints, 'mobile')})';
  $bp-touch-screen: '(max-width: #{map_get($breakpoints, 'tablet') - 1})';
  $bp-tablet: '(min-width: #{map_get($breakpoints, 'mobile') + 1})';
  $bp-tablet-only: '(min-width: #{map_get($breakpoints, 'mobile') + 1}) and (max-width: #{map_get($breakpoints, 'tablet')})';
  $bp-desktop: '(min-width: #{map_get($breakpoints, 'tablet') + 1})';
  $bp-desktop-only: '(min-width: #{map_get($breakpoints, 'tablet') + 1}) and (max-width: #{map_get($breakpoints, 'desktop')})';
  $bp-desktop-large: '(min-width: #{map_get($breakpoints, 'desktop') + 1})';

  @if $point == mobile-only {
    @media #{$bp-mobile-only} { @content; }
  }
  @else if $point == tablet {
    @media #{$bp-tablet} { @content; }
  }
  @else if $point == tablet-only {
    @media #{$bp-tablet-only} { @content; }
  }
  @else if $point == touch-only {
    @media #{$bp-touch-screen} { @content; }
  }
  @else if $point == desktop {
    @media #{$bp-desktop} { @content; }
  }
  @else if $point == desktop-only {
    @media #{$bp-desktop-only} { @content; }
  }
  @else if $point == desktop-large {
    @media #{$bp-desktop-large} { @content; }
  }
}
